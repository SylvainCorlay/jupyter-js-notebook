/*-----------------------------------------------------------------------------
| Copyright (c) 2014-2016, Jupyter Development Team.
|
| Distributed under the terms of the Modified BSD License.
|----------------------------------------------------------------------------*/
/* Increased specificity in case phosphor css is loaded later. */
.p-Widget.jp-Notebook {  
  min-width: 50px;
  min-height: 50px;
  overflow-y: auto;
}


.jp-InputArea-prompt {
  flex-basis: 90px;
  color: #303F9F;
  font-family: monospace;
  padding: 0.4em;
  text-align: right;
  line-height: 20px;
  font-size: 14px;
}


.jp-InputArea-editor {
  height: auto;
  min-height: 2em;
}


.jp-InputArea-editor.jp-CodeMirror {
  border: 1px solid #cfcfcf;
  border-radius: 2px;
  background: #f7f7f7;
  line-height: 1.2em;
  padding: 4px;
}


.jp-MarkdownCell {
  outline: 0;
}


.jp-MarkdownCell.jp-mod-rendered {
  padding-left: 100px;
}


.jp-MarkdownCell-renderer {
  padding-left: 4px;
}


.jp-OutputArea {
  background: #ffffff;
}


.jp-OutputArea-output {
  padding: 4px;
  margin-left: 90px;
  display: flex;
  flex-direction: row;
}


.jp-OutputArea-output.jp-OutputArea-executeResult {
  margin-left: 0px;
  padding-left: 0px;
  flex: 1 1 auto;
}


.jp-OutputArea-prompt {
  color: #D84315;
  font-family: monospace;
  padding: 0.4em;
  text-align: right;
  line-height: 20px;
  font-size: 14px;
  flex: 0 0 90px;
  box-sizing: border-box;
}


.jp-OutputArea pre {
  border: none;
}


.jp-OutputArea-stderr {
  background: #fdd;
}


.jp-Cell.jp-mod-selected {
  border-color: #ABABAB;
  border-left-width: 1px;
  background: linear-gradient(to right, #42A5F5 -40px, #42A5F5 5px, transparent 5px, transparent 100%);
}


.jp-Cell.jp-mod-selected.jp-mod-focused {
  border-color: #66BB6A;
  border-left-width: 1px;
  background: linear-gradient(to right, #66BB6A -40px, #66BB6A 5px, transparent 5px, transparent 100%);  
}


.jp-Cell {
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: 10px;
  padding-right: 10px;
  border-width: 1px;
  border-style: solid;
  border-color: transparent;
  outline: none;
}


.jp-MarkdownCell {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}


.jp-CodeMirror > .CodeMirror {
  line-height: 1.21429em;
  /* Changed from 1em to our global default */
  font-size: 14px;
  height: auto;
  /* Changed to auto to autogrow */
  background: none;
  /* Changed from white to allow our bg to show through */
}


.jp-CodeMirror > .CodeMirror-scroll {
  /*  The CodeMirror docs are a bit fuzzy on if overflow-y should be hidden or visible.*/
  /*  We have found that if it is visible, vertical scrollbars appear with font size changes.*/
  overflow-y: hidden;
  overflow-x: auto;
}


.jp-CodeMirror > .CodeMirror-lines {
  /* In CM2, this used to be 0.4em, but in CM3 it went to 4px. We need the em value because */
  /* we have set a different line-height and want this to scale with that. */
  padding: 0.4em;
}


.jp-CodeMirror > .CodeMirror-linenumber {
  padding: 0 8px 0 4px;
}


.jp-CodeMirror > .CodeMirror-gutters {
  border-bottom-left-radius: 2px;
  border-top-left-radius: 2px;
}


.jp-CodeMirror > .CodeMirror pre {
  /* In CM3 this went to 4px from 0 in CM2. We need the 0 value because of how we size */
  /* .CodeMirror-lines */
  padding: 0;
  border: 0;
  border-radius: 0;
}
